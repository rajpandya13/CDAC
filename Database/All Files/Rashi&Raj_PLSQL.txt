1. Write a stored procedure which will display all employees working in dept 30.

mysql> delimiter $$
mysql> drop procedure if exists display $$
Query OK, 0 rows affected, 1 warning (0.00 sec)

mysql> create procedure display()
    -> begin
    ->    select empno,ename,deptno
    ->    from emp
    ->    where deptno=30;
    -> end $$
Query OK, 0 rows affected (0.00 sec)

mysql> delimiter ;
mysql> call display();
+-------+--------+--------+
| empno | ename  | deptno |
+-------+--------+--------+
|  7499 | ALLEN  |     30 |
|  7521 | WARD   |     30 |
|  7654 | MARTIN |     30 |
|  7698 | BLAKE  |     30 |
|  7844 | TURNER |     30 |
|  7900 | JAMES  |     30 |
+-------+--------+--------+
6 rows in set (0.00 sec)

Query OK, 0 rows affected (0.01 sec)
-------------------------------------------------------------------------------------------------------------------

2. Write a stored procedure which will display count of all analysts in the emp table.

mysql> delimiter $$
mysql> drop procedure if exists display $$
Query OK, 0 rows affected (0.00 sec)

mysql> create procedure display()
    -> begin
    -> select count(*)
    -> from emp
    -> where job = 'analyst';
    -> end $$
Query OK, 0 rows affected (0.00 sec)

mysql> delimiter ;
mysql> call display();
+----------+
| count(*) |
+----------+
|        3 |
+----------+
1 row in set (0.00 sec)
-------------------------------------------------------------------------------------------------------------------

3.Write a stored procedure which will find avg salary for any deptno passed to it.  Pass deptno as     in parameter  .


mysql> delimiter //
mysql> create procedure displayAvg(in mno int)
    -> begin
    ->    select avg(sal)
    ->    from emp
    ->    where deptno=mno;
    -> end //
Query OK, 0 rows affected (0.01 sec)

mysql> delimiter ;
mysql> call displayAvg(10);
+-------------+
| avg(sal)    |
+-------------+
| 2916.666667 |
+-------------+
1 row in set (0.00 sec)

Query OK, 0 rows affected (0.00 sec)

mysql> call displayAvg(20);
+-------------+
| avg(sal)    |
+-------------+
| 3479.166667 |
+-------------+
1 row in set (0.00 sec)

Query OK, 0 rows affected (0.01 sec)

mysql> call displayAvg(30);
+-------------+
| avg(sal)    |
+-------------+
| 1566.666667 |
+-------------+
1 row in set (0.00 sec)

Query OK, 0 rows affected (0.00 sec)
-------------------------------------------------------------------------------------------------------------------


4. Pass empno,ename,sal to the procedure and insert it into the table. 


delimiter //mysql> DELIMITER //
mysql>
mysql> -- Create or modify the insert_data procedure
mysql> CREATE PROCEDURE insert_data(IN mno INT, IN mname VARCHAR(20), IN msal INT)
    -> BEGIN
    ->     -- Insert values into the emp table with column names
    ->     INSERT INTO emp (empno, ename, sal)
    ->     VALUES (mno, mname, msal);
    ->
    ->     -- Select all records from emp to confirm the insertion
    ->     SELECT * FROM emp;
    -> END //
Query OK, 0 rows affected (0.02 sec)

mysql>
mysql> -- Reset the delimiter back to default
mysql> DELIMITER ;
mysql> CALL insert_data(5555, 'sdfh', 6000);
+-------+--------+-----------+------+------------+----------+---------+--------+------------+
| EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL      | COMM    | DEPTNO | experience |
+-------+--------+-----------+------+------------+----------+---------+--------+------------+
|  7369 | SMITH  | CLERK     | 7902 | 1980-12-17 |   800.00 |    NULL |     20 |         44 |
|  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 |  1600.00 |  300.00 |     30 |         44 |
|  7521 | WARD   | SALESMAN  | 7698 | 1981-02-22 |  1250.00 |  500.00 |     30 |         44 |
|  7566 | JONES  | MANAGER   | 7839 | 1981-04-02 |  2975.00 |    NULL |     20 |         44 |
|  7654 | MARTIN | SALESMAN  | 7698 | 1981-09-28 |  1250.00 | 1400.00 |     30 |         43 |
|  7698 | BLAKE  | MANAGER   | 7839 | 1981-05-01 |  2850.00 |    NULL |     30 |         44 |
|  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 |  2450.00 |    NULL |     10 |         43 |
|  7788 | SCOTT  | ANALYST   | 7566 | 1982-12-09 |  3000.00 |    NULL |     20 |         42 |
|  7839 | KING   | PRESIDENT | NULL | 1981-11-17 |  5000.00 |    NULL |     10 |         43 |
|  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 |  1500.00 |    0.00 |     30 |         43 |
|  7876 | ADAMS  | CLERK     | 7788 | 1983-01-12 |  1100.00 |    NULL |     20 |         42 |
|  7900 | JAMES  | CLERK     | 7698 | 1981-12-03 |   950.00 |    NULL |     30 |         43 |
|  7902 | FORD   | ANALYST   | 7566 | 1981-12-03 |  3000.00 |    NULL |     20 |         43 |
|  7934 | MILLER | CLERK     | 7782 | 1982-01-23 |  1300.00 |    NULL |     10 |         43 |
|  1111 | Geeta  | NULL      | NULL | NULL       | 10000.00 |  300.00 |     20 |       NULL |
|  2222 | Raj    | Analyst   | NULL | NULL       |     NULL |    NULL |     40 |       NULL |
|  5555 | sdfh   | NULL      | NULL | NULL       |  6000.00 |    NULL |   NULL |       NULL |
+-------+--------+-----------+------+------------+----------+---------+--------+------------+
17 rows in set (0.01 sec)

Query OK, 0 rows affected (0.05 sec)

































